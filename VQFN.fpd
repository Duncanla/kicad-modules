/*
 * VQFN package from Texas Instruments
 * 
 * NOTE: It is recommended to check the size of the thermal pad for your
 *       specific device datasheet as it may be different than what is given
 *       here.
 */
frame padPaste {
    set pasteDx = dx*pasteW + dy*pasteL
    set pasteDy = dx*pasteL + dy*pasteW
    corner1: vec @(-pasteDx/2, -pasteDy/2)
    corner2: vec corner1(pasteDx, pasteDy)
    corner3: vec corner2(-pasteDx, 0mm)
    
    rpad " " corner1 corner2 paste
}

frame pad {
    orig: vec @(0mm, 0mm)
    
    set padDx = dx*padW + dy*padL
    set padDy = dx*padL + dy*padW
    corner1: vec @(-padDx/2, -padDy/2)
    corner2: vec corner1(padDx, padDy)
    corner3: vec corner2(-padDx, 0mm)
    
    set pad = pinNumOffset + n + 1
    rpad "$pad" corner1 corner2 bare
    frame padPaste @
}

frame padArray {
    loop n = 0, padsPerSide-1
    set padIndex = n - padsPerSide/2
    
    set px = dx*(padIndex+1/2)*pitch
    set py = dy*(padIndex+1/2)*pitch
    
    padOffset: vec @(px, py)
    frame pad padOffset
}

frame thermPadPasteSquare {
    corner1: vec @(-thermPadPasteW/2, -thermPadPasteL/2)
    corner2: vec corner1(thermPadPasteW, thermPadPasteL)
    
    pad " " corner1 corner2 paste
}

frame thermPadPaste {
    loop xIndex = 0, thermPadPasteNumW - 1
    loop yIndex = 0, thermPadPasteNumL - 1
    
    set px = -(thermPadPasteNumW-1)/2*thermPadPasteGapW - (thermPadPasteNumW-1)/2*thermPadPasteW + xIndex*(thermPadPasteW + thermPadPasteGapW)
    set py = -(thermPadPasteNumL-1)/2*thermPadPasteGapL - (thermPadPasteNumL-1)/2*thermPadPasteL + yIndex*(thermPadPasteL + thermPadPasteGapL)
    //set px = -(thermPadPasteNumW-1)/2/thermPadPasteNumW + xIndex/thermPadPasteNumW
    //set py = -(thermPadPasteNumL-1)/2/thermPadPasteNumL + yIndex/thermPadPasteNumL
    pasteOffset: vec @(px, py)
    frame thermPadPasteSquare pasteOffset
}

frame thermPad {
    corner1: vec @(-thermPadW/2, -thermPadL/2)
    corner2: vec corner1(thermPadW, thermPadL)
    set pad = Npads + 1
    pad "$pad" corner1 corner2 bare
    frame thermPadPaste @
}

frame outerPads {
    table
      {dx, dy, pinNumOffset}
      {0, -1, 0}
      {1, 0, padsPerSide}
      {0, 1, 2*padsPerSide}
      {-1, 0, 3*padsPerSide}
    
    set ax = dy*(width/2 - padL/2)
    set ay = -dx*(height/2 - padL/2)
    arrayOrg: vec @(ax, ay)
    frame padArray arrayOrg
}

frame pads {
    frame outerPads @
    frame thermPad @
}

frame outline {
    table
      {isPin1, xOffset, yOffset, dX, dY}
      {1, -outlineW/2, outlineL/2, 1, -1}
      {0, outlineW/2, outlineL/2, -1, -1}
      {0, outlineW/2, -outlineL/2, -1, 1}
      {0, -outlineW/2, -outlineL/2, 1, 1}
    
    set length = pad1Offset - padW/2 - padL/2 - silkSpacing 
    corner: vec @(xOffset, yOffset)
    line1End: vec corner(dX*length, 0mm)
    line2End: vec corner(0mm, dY*length)
    line corner line1End silkW
    line corner line2End silkW
    
    /* 3rd line (from line1End to line2End) to designate pin 1 */
    line3Start: vec corner(isPin1*dX*length, 0mm)
    line3End: vec corner(0mm, isPin1*dY*length)
    line line3Start line3End silkW
}

package "VQFN_${Npads}"
allow overlap
set Npads = 48
set padsPerSide = Npads/4

table
  { width, height, pitch, padW, padL, pasteW, pasteL, thermPadW, thermPadL,
      thermPadPasteW, thermPadPasteL, thermPadPasteNumW, thermPadPasteNumL,
      thermPadPasteGapW, thermPadPasteGapL, outlineW, outlineL}
  { 7.8mm, 7.8mm, 0.5mm, 0.28mm, 0.85mm, 0.23mm, 0.8mm, 4.1mm, 4.1mm, 1.15mm, 1.15mm, 3, 3, 0.3mm, 0.3mm, 7.15mm, 7.15mm }
  
set pad1Offset = width/2 - padsPerSide/2*pitch + pitch/2
frame pads @

set silkW = 8mil
set silkSpacing = 8mil
frame outline @

org: vec @(0mm,0mm)


/* Pad Measurements */
measx pad.corner1 -> pad.corner2
meas pad.corner2 -> pad.corner3
measx thermPad.corner1 -> thermPad.corner2
measy thermPad.corner1 -> thermPad.corner2
measx thermPadPasteSquare.corner1 -> thermPadPasteSquare.corner2
measy thermPadPasteSquare.corner1 -> thermPadPasteSquare.corner2
measx thermPadPasteSquare.corner2 <- thermPadPasteSquare.corner1
measy thermPadPasteSquare.corner2 <- thermPadPasteSquare.corner1
measx padPaste.corner1 -> padPaste.corner2
meas padPaste.corner2 -> padPaste.corner3

/*Pitch Measurements */
measx org -> pad.orig
measy org <- pad.orig

/* Chip Measurements (ie. width, height, etc) */
measx padArray/pad.corner1 >> padArray/pad.corner1
measx padArray/pad.corner2 >> padArray/pad.corner2
measy padArray/pad.corner1 >> padArray/pad.corner1
measy padArray/pad.corner2 >> padArray/pad.corner2
measx padPaste.corner1 >> padPaste.corner1
measx padPaste.corner2 >> padPaste.corner2

measx outline.corner -> outline.corner
measy outline.corner -> outline.corner
